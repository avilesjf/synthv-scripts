local SCRIPT_TITLE = 'Group time shift V1.0'

--[[

Synthesizer V Studio Pro Script
 
lua file name: GroupTimeShift.lua

Usage: Run this script to shift the time for all groups selected

Update values in NotesObject definition below:
eg:  shiftTime = 10 => +10ms

isForm = true to ask a time offset

2025 - JF AVILES
--]]

-- Generated by JFA TranslateScripts.lua
function getTranslations(langCode)
	return getArrayLanguageStrings()[langCode]
end

-- Generated by JFA TranslateScripts.lua
function getArrayLanguageStrings()
	return {
		["en-us"] = {
			{"Time shifting (in milliseconds)", "Time shifting (in milliseconds)"},
			{"ms", "ms"},
			{"Select time shifting for selected groups!", "Select time shifting for selected groups!"},
			{"group(s) selected", "group(s) selected"},
			{"+", "+"},
			{"-", "-"},
			{"group(s) shifted to", "group(s) shifted to"},
			{"Please select groups first on Arrangement view!", "Please select groups first on Arrangement view!"},
		},
	}
end

function getClientInfo()
	return {
		name = SV:T(SCRIPT_TITLE),
		category = "_JFA_Groups",
		author = "JFAVILES",
		versionNumber = 1,
		minEditorVersion = 65540
	}
end

-- Define a class "NotesObject"
NotesObject = {
	project = nil,
	timeAxis = nil,
	editor = nil,
	hostinfo = nil,
	osType = "",
	osName = "",
	hostName = "",
	languageCode = "", 
	hostVersion = "",
	hostVersionNumber = 0,
	activeCurrentTrack = nil,
	groupRef = nil,
	groupsSelected = nil,
	isForm = false,					-- True if you need a form with a slider
	shiftTimeLevelMinValue = -100,	-- Slider min value
	shiftTimeLevelMaxValue = 100,	-- Slider max value
	shiftTimeLevelInterval = 1,		-- Slider interval
	shiftTimeDefaultValue = -10,	-- -10ms default value for slider form
	shiftTime = -10,				-- -10ms
}

-- Constructor method for the NotesObject class
function NotesObject:new()
    local notesObject = {}
    setmetatable(notesObject, self)
    self.__index = self
	
    self.project = SV:getProject()
	self:getHostInformations()
	self.timeAxis = self.project:getTimeAxis()
	self.editor = SV:getMainEditor()
	self.activeCurrentTrack = self.editor:getCurrentTrack()
	self.groupRef = self.editor:getCurrentGroup()
	self.groupsSelected = SV:getArrangement():getSelection():getSelectedGroups()	
	
    return self
end

-- Show message dialog
function NotesObject:show(message)
	SV:showMessageBox(SV:T(SCRIPT_TITLE), message)
end

-- Get host informations
function NotesObject:getHostInformations()
	self.hostinfo = SV:getHostInfo()
	self.osType = self.hostinfo.osType  -- "macOS", "Linux", "Unknown", "Windows"
	self.osName = self.hostinfo.osName
	self.hostName = self.hostinfo.hostName
	self.languageCode = self.hostinfo.languageCode
	self.hostVersion = self.hostinfo.hostVersion
	self.hostVersionNumber = self.hostinfo.hostVersionNumber
end

-- Get form for asking time shift value
function NotesObject:getForm()
	local sliderShiftTime = {
			name = "shiftTime", type = "Slider",
			label = SV:T("Time shifting (in milliseconds)"),
			format = "%3.0f" .. " " .. SV:T("ms"),
			minValue = self.shiftTimeLevelMinValue, 
			maxValue = self.shiftTimeLevelMaxValue, 
			interval = self.shiftTimeLevelInterval, 
			default = self.shiftTimeDefaultValue
		}
		
	local form = {
		title = SV:T(SCRIPT_TITLE),
		message = SV:T("Select time shifting for selected groups!"),
		buttons = "OkCancel",
		widgets = {
			{
				name = "infos", type = "TextArea", 
				label = #self.groupsSelected .. " " .. SV:T("group(s) selected"),
				default = "",
				height = 0
			},
			sliderShiftTime,
			{
				name = "separator", type = "TextArea", label = "", height = 0
			}
		}
	}
	return SV:showCustomDialog(form)
end

-- Groups shift
function NotesObject:groupsShift()
	local valueInMilliseconds = self.shiftTime / 1000  -- in milliseconds
	local shiftTimeInBlicks = self.timeAxis:getBlickFromSeconds(valueInMilliseconds)
	
	-- Selected group
	for _, group in pairs(self.groupsSelected) do
		group:setTimeOffset(group:getTimeOffset() + shiftTimeInBlicks)
	end
	
	local sign = SV:T("+")
	if self.shiftTime < 0 then
		sign = SV:T("-")
	end
	
	self:show(#self.groupsSelected .. " " .. SV:T("group(s) shifted to")
		.. " " .. sign .. self.shiftTime .. " " .. SV:T("ms"))
end

-- Start process
function NotesObject:start()
	
	-- With form
	if self.isForm then
		local userInput = self:getForm()
			
		if userInput.status then
			self.shiftTime = userInput.answers.shiftTime
			self:groupsShift()
		end
	else
		-- Without form
		self:groupsShift()
	end
end

function main()

	local notesObject = NotesObject:new()
	-- Check groups selected
	if #notesObject.groupsSelected == 0 then
		notesObject:show(SV:T("Please select groups first on Arrangement view!"))
	else
		notesObject:start()
	end
	SV:finish()
end